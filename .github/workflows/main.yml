name: Lint and test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  format:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          # Pin the compiler version to avoid future breakage from new lints
          toolchain: 1.89.0
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --tests

  check:
    name: Cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            fuzz
      - name: Cargo check (gryf)
        run: cargo check --all-targets
      - name: Cargo check (fuzz)
        run: cargo check
        working-directory: fuzz

  check-doc:
    name: Rustdoc check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Cargo doc
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --document-private-items --workspace

  test:
    name: Test (${{ matrix.rust }})
    runs-on: ubuntu-latest
    needs: [format, lint, check]
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo test
      - run: cargo test proptest_ -- --ignored
        if: matrix.rust == 'stable'
